deploy:
  api_key:
    secure: vX4KMo8u3YtfMcHZU9OdaI8B2VPoTZGhjkVIsaSJRj78da/rw1qYAh3q/n5WLy3SnKl4dkAhnlEKzMuF1q0dN9mYqVwP1aU8AD2Nm2gtJLB8VKSvTfQsBBePEwBKY1iOaymGl5Oa8kkiwh+QVtkLviQ/9S6nCP7A9CXaWu44rdpLHFyPLCXDqQFU0ZQO/w6nrYaH8nfiq89myhwVr1K/kztaWdk5yv13EIr8WoYVHbv0uiQDeagozc9MuTLjrTVvzqRIrJf95pJwH7V05whcTpaJMf2qmoMGVmgb018ANCzbvANmSR/yZwaU9/Rfv0kJsfynZV6fb2sAPd34yPO0NX8M5/3wyjWIQnWYgyRh51K1CAVr18+WHweySpfUxTiZtwEURIgE1vR2gj1eui94+DIJtmyJ9Fx/wox0aslbYLh+G9eQsP8SQmpL/R1UcGMYBIKvyc0iCwAb8rpHcuebcb1e2hvN8fHkW9q9a6DlAiR6gt/ax+yq5NLeBDgwu5QiW+G0vEPrhDm75qrdFMPEVRxo5whUWweVQfZLshnF40BMX3RTWn5KuahfIhKpd/tRVcHI99YuCEtGwN6qd/nEAs3fKzwjFcM11y55hoaH2hgh37549R6V3pMUcsjBEr+jErlGRUm98nd+hPGhWayXuMoPqNZZwBzosV3hc7zDFV8=
  file: $BUILD_NAME.tar
  name: "0x${TRAVIS_COMMIT}"
  prerelease: true
  provider: releases
  skip_cleanup: true
  on:
    all_branches: true
language: cpp
matrix:
  include:
  - name: Linux Ubuntu Xenial 32-bit
    os: linux
    addons:
      apt:
        packages:
        - ninja-build=1.7.1-1~ubuntu16.04.1
        - pkg-config
        - libnss3-dev
        sources:
        - sourceline: deb http://archive.ubuntu.com/ubuntu/ xenial-backports universe
    cache: ccache
    dist: xenial
    env: ARCH=i686
    script:
    - pwd
    - env
    - ./tools/import-upstream.sh
    - ( cd src; ./get-clang.sh )
    - ccache -s
    - ( cd src; env EXTRA_FLAGS=target_cpu=x86 ./build.sh )
    - ccache -s
    - ./tests/basic.sh src/out/Release/naive
    - ls -l src/out/Release/
    - export BUILD_NAME="naiveproxy-$TRAVIS_BRANCH-$TRAVIS_OS_NAME"
    - mkdir $BUILD_NAME
    - cp -v src/out/Release/naive src/config.json LICENSE USAGE.txt $BUILD_NAME
    - tar cf $BUILD_NAME.tar $BUILD_NAME
  - name: Windows 64-bit
    os: windows
    env:
    - PLATFORM=x64
    - CLCACHE_PATH="$HOME/clcache"
    - VS15=true
    - CCACHE_TEMPDIR=/tmp/.ccache-temp
    - CCACHE_COMPRESS=1
    - CCACHE_DIR=$HOME/.ccache
    cache:
      directories:
      - $CLCACHE_PATH
      - $CLCACHE_DIR
    filter_secrets: false
    install:
    - export GYP_MSVS_OVERRIDE_PATH="/c/Program Files (x86)/Microsoft Visual Studio/2017/BuildTools"
    - "choco install ninja windows-sdk-10-version-1809-all -y"
    - "( mkdir -p $CLCACHE_PATH && cd $CLCACHE_PATH && curl -L https://github.com/frerich/clcache/releases/download/v4.2.0/clcache-4.2.0.zip --output clcache-4.2.0.zip && 7z x -y clcache-4.2.0.zip > /dev/null )"
    - export PATH=$CLCACHE_PATH:$PATH
    - clcache -z
    script:
    - pwd
    - env
    - ./tools/import-upstream.sh
    - ( cd src; ./get-clang.sh )
    - clcache -s
    - "~/.cargo/bin/sccache -s ||:"
    - ( cd src; env ./build.sh )
    - clcache -s
    - "~/.cargo/bin/sccache -s ||:"
    - ./tests/basic.sh src/out/Release/naive
    - ls -l src/out/Release/
    - export BUILD_NAME="naiveproxy-$TRAVIS_BRANCH-$TRAVIS_OS_NAME-$PLATFORM"
    - mkdir $BUILD_NAME
    - cp -v src/out/Release/naive.exe src/config.json LICENSE USAGE.txt $BUILD_NAME
    - tar cvf $BUILD_NAME.tar $BUILD_NAME
  - name: Windows 32-bit
    os: windows
    env:
    - PLATFORM=x86
    - CLCACHE_PATH="$HOME/clcache"
    - VS15=true
    - CCACHE_TEMPDIR=/tmp/.ccache-temp
    - CCACHE_COMPRESS=1
    - CCACHE_DIR=$HOME/.ccache
    cache:
      directories:
      - $CLCACHE_PATH
      - $CLCACHE_DIR
    filter_secrets: false
    install:
    - export GYP_MSVS_OVERRIDE_PATH="/c/Program Files (x86)/Microsoft Visual Studio/2017/BuildTools"
    - "choco install ninja windows-sdk-10-version-1809-all -y"
    - "( mkdir -p $CLCACHE_PATH && cd $CLCACHE_PATH && curl -L https://github.com/frerich/clcache/releases/download/v4.2.0/clcache-4.2.0.zip --output clcache-4.2.0.zip && 7z x clcache-4.2.0.zip -y > /dev/null )"
    - export PATH=$CLCACHE_PATH:$PATH
    - clcache -z
    script:
    - pwd
    - env
    - ./tools/import-upstream.sh
    - ( cd src; ./get-clang.sh )
    - clcache -s
    - "~/.cargo/bin/sccache -s ||:"
    - ( cd src; env EXTRA_FLAGS=target_cpu=x86 ./build.sh )
    - clcache -s
    - "~/.cargo/bin/sccache -s ||:"
    - ./tests/basic.sh src/out/Release/naive
    - ls -l src/out/Release/
    - export BUILD_NAME="naiveproxy-$TRAVIS_BRANCH-$TRAVIS_OS_NAME-$PLATFORM"
    - mkdir $BUILD_NAME
    - cp -v src/out/Release/naive.exe src/config.json LICENSE USAGE.txt $BUILD_NAME
    - tar cvf $BUILD_NAME.tar $BUILD_NAME
  - name: MacOS Sierra 10.12 64-bit
    os: osx
    addons:
      homebrew:
        packages:
        - ninja
        - ccache
    cache: ccache
    env: ARCH=x86_64
    osx_image: xcode9.2
    script:
    - pwd
    - env
    - ./tools/import-upstream.sh
    - ( cd src; ./get-clang.sh )
    - ccache -s
    - ( cd src; ./build.sh )
    - ccache -s
    - ./tests/basic.sh src/out/Release/naive
    - ls -l src/out/Release/
    - export BUILD_NAME="naiveproxy-$TRAVIS_BRANCH-$TRAVIS_OS_NAME"
    - mkdir $BUILD_NAME
    - cp -v src/out/Release/naive src/config.json LICENSE USAGE.txt $BUILD_NAME
    - tar cf $BUILD_NAME.tar $BUILD_NAME
